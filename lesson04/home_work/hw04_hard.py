from functools import reduce
import re
# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

matrix_rotate = [list(itm) for itm in zip(*matrix)]
print(matrix_rotate)

# Суть сложности hard: Решите задачу в одну строку

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

index = 0
max_mult_number = 0
number = re.sub(r'\n', '', number)
for i in range(len(number) - 5):
    check_number = number[i:i+5]
    if check_number.isdigit():
        mult_number = reduce(lambda x, y: int(x) * int(y), list(check_number))
        if mult_number > max_mult_number:
            index = i
            max_mult_number = mult_number

print(index+1, max_mult_number)

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
queens = [[2, 1],
          [4, 2],
          [6, 3],
          [8, 4],
          [3, 5],
          [1, 6],
          [7, 7],
          [5, 8]]
skewer = False
for i in range(8):
    for j in range(i + 1, 8):
        if queens[i][0] == queens[j][0] or queens[i][1] == queens[j][1] or \
                abs(queens[i][0] - queens[j][0]) == abs(queens[j][1] - queens[j][1]):
            skewer = True
if skewer:
    print('YES')
else:
    print('NO')